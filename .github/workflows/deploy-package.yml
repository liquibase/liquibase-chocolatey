name: Choco Build and Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Value from the version field in pom.xml. i.e 4.26.0"
        type: string
        required: true
      dry_run: 
        description: 'Flag to indicate if the workflow is triggered to create a dry-run release'
        required: true
        type: boolean
        default: false
      dry_run_zip_url: 
        description: 'URL of the dry-run zip release'
        required: false
        type: string
  workflow_call:
    inputs:
      version:
        description: "Value from the version field in pom.xml. i.e 4.26.0"
        type: string
        required: true
      dry_run: 
        description: 'Flag to indicate if the workflow is triggered to create a dry-run release'
        required: true
        type: boolean
        default: false
      dry_run_zip_url: 
        description: 'URL of the dry-run zip release'
        required: false
        type: string

jobs:
  build_and_deploy_choco:
    runs-on: windows-latest
    env:
      LIQUIBASE_VERSION: ${{ inputs.version }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DRY_RUN_ZIP_URL: ${{ inputs.dry_run_zip_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: liquibase/liquibase-chocolatey

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
    
      - name: Verify Java version
        run: java -version

      - name: Install Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

      - name: Install Ant
        run: choco install ant

      - name: Build nupkg Chocolatey package
        if: ${{ inputs.dry_run == false }}
        run: |
          ant make-nuspec

      - name: Build nupkg Chocolatey package dry-run
        if: ${{ inputs.dry_run == true }}
        run: |
          ant -f build_dry_run.xml make-nuspec

      - name: Choco pack
        run: |
          choco pack

      - name: Install Temurin 17
        run: choco install temurin17

      - name: Choco install
        if: ${{ inputs.dry_run == false }}
        run: |
          choco install liquibase --version="${{ inputs.version }}" --source="." --debug --verbose
          liquibase --version

      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEVOPS_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/devops
          parse-json-secrets: true

      - name: Choco push
        if: ${{ inputs.dry_run == false }}
        run: |
          choco push liquibase.${{ inputs.version }}.nupkg --source "'https://push.chocolatey.org/'" --key "${{env.CHOCO_APIKEY}}" --debug --verbose

  # create a placeholder branch to check if tracking branch exists for this version
  # Branch is created when package is submitted to Chocolatey
  # Branch is deleted when package becomes available on Chocolatey
  create_placeholder_branch_choco:
    runs-on: ubuntu-latest
    if: ${{ inputs.dry_run == true }}
    steps:

      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - name: Get GitHub App token
        id: get-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ env.LIQUIBASE_GITHUB_APP_ID }}
          private-key: ${{ env.LIQUIBASE_GITHUB_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: liquibase

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: liquibase/liquibase
          token: ${{ steps.get-token.outputs.token }} 

      - name: Create placeholder branch for choco
        id: create-placeholder-branch-choco
        run: |
          git fetch origin
          git checkout -b ci-oss-choco-package-check
          git push origin ci-oss-choco-package-check
          echo "This is a placeholder branch for oss choco package v.${{ inputs.version }}. If this branch is open, it means the choco package is not yet approved" > README.md
          